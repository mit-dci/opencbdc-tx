---
name: docker merge

# Runs on push to trunk and when pull requests are merged into trunk
on:
  push:
    branches:
      - trunk

jobs:
  docker-build:
    runs-on: ubuntu-latest
    steps:
      ########################
      # CI Setup             #
      ########################
      - name: Checkout code
        uses: actions/checkout@v4

      ########################
      # Build Base           #
      ########################
      - name: Docker meta base (merge)
        id: meta-base
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}-base
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Set up QEMU (merge)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx (merge)
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry (merge)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push base (merge)
        uses: docker/build-push-action@v6
        with:
          context: .
          target: base
          push: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          tags: ${{ steps.meta-base.outputs.tags }}
          labels: ${{ steps.meta-base.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      ########################
      # Submodules           #
      ########################
      - name: Pull submodules
        run: git submodule init && git submodule update

      ########################
      # Build Application    #
      ########################
      - name: Docker meta twophase (merge)
        id: meta-twophase
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}-twophase
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Docker meta atomizer (merge)
        id: meta-atomizer
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}-atomizer
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha

      - name: Docker meta parsec (merge)
        id: meta-parsec
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/${{ github.repository }}-parsec
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=ref,event=branch
            type=ref,event=pr
            type=sha


      - name: Build and push twophase (merge)
        uses: docker/build-push-action@v6
        with:
          context: .
          target: twophase
          push: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          tags: ${{ steps.meta-twophase.outputs.tags }}
          labels: ${{ steps.meta-twophase.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push atomizer (merge)
        uses: docker/build-push-action@v6
        with:
          context: .
          target: atomizer
          push: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          tags: ${{ steps.meta-atomizer.outputs.tags }}
          labels: ${{ steps.meta-atomizer.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push parsec (merge)
        uses: docker/build-push-action@v6
        with:
          context: .
          target: parsec
          push: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          tags: ${{ steps.meta-parsec.outputs.tags }}
          labels: ${{ steps.meta-parsec.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
